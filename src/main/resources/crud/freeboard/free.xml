<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.myproject.mycode.dao.FreeBoardDao">

	<!-- 신고 중복 확인 -->
	<select id="getSingoCount" resultType="int">
		select count(*) from
		reportreason_board where report_board_no=#{param1} and
		category_no=#{param2} and report_nick = #{param3}
	</select>

	<!-- 신고글 신고카운트 +1 -->
	<update id="updateFreeSingo" parameterType="int">
		update freeboard set
		free_singo = free_singo + 1 where free_no = #{free_no}
	</update>

	<!-- free단독 -->
	<!-- 게시글 작성 -->
	<insert id="insert" parameterType="free">
		<!-- <selectKey keyProperty="num" order="BEFORE" resultType="int"> select 
			nvl(max(num),0) + 1 from board </selectKey> -->
		<!-- insert into freeboard (free_no, free_nick, category_no,free_subject,free_content,free_regdate,free_readcount,free_renum,free_del) 
			values (freeboard_seq.nextval,'plz',2,#{free_subject},#{free_content},sysdate,0,1,0 
			) -->
		insert into freeboard (free_no, free_nick, category_no, free_subject, free_content, free_regdate, free_readcount, free_renum, free_del)
		 values
		(freeboard_seq.nextval, #{free_nick}, 1, #{free_subject},
		#{free_content}, sysdate, 0, #{free_renum}, #{free_del} )
	</insert>

	<!-- 게시글 목록 조회 -->
	<select id="list" parameterType="free" resultType="free">
		<!-- select free_subject, free_nick, free_regdate, free_readcount from 
			freeboard where free_del = 0 order by free_no desc -->
		<!-- 게시판 테이블에서 모든 데이터를 조회, rownum 값을 같이 조죄하기 위해 서브쿼리 사용 -->
		<!-- rownum에 해당하는 게시글만 추출하기 위해 다시한번 select문 사용 -->
		<!-- rownum을 rn이라는 별칭으로 부여 -->
		select * from (select a.*,rowNum rn from (
		select * from freeboard
		<where>	<!-- 검색어(keyword)와 검색 기준(search)을 이용하여 검색 조건에 맞게 동적으로 SQL 쿼리를 생성 -->
			<if test="keyword != null and search=='all'">
				free_subject like '%'||#{keyword}||'%' or
				free_content
				like '%'||#{keyword}||'%' or
				free_nick like '%'||#{keyword}||'%'
			</if>
			<if test="keyword != null and search!='all'">
				${search} like '%'||#{keyword}||'%'
			</if>
			<!-- <if test="keyword != null and search=='subcon'"> free_subject like 
				'%'||#{keyword}||'%' or free_content like '%'||#{keyword}||'%' </if> -->
		</where>
		<!-- 답글이 있는 게시글들이 최신순으로 정렬되면서 그룹화 -->
		order by free_no desc) a )
		<!-- where절에서 검색어가 포함된 게시글을 검색하도록 처리 -->
			where (rn between #{startRow} and #{endRow}) and free_del =0
	</select>

	<!-- 데이터 총 개수 -->
	<select id="getTotal" parameterType="free" resultType="int">
		select count(*) from freeboard
		<where><!-- 검색어 포함한 데이터 개수 검색 -->
			<if test="keyword != null and search=='all'">
				(free_subject like '%'||#{keyword}||'%' or
				free_content
				like '%'||#{keyword}||'%' or
				free_nick like '%'||#{keyword}||'%') and free_del =0
			</if>
			<if test="keyword != null and search !='all'">
				${search} like '%' || #{keyword} || '%' and free_del =0
			</if>
		</where>
	</select>

	<!-- 상세정보 구하기 -->
	<select id="select" parameterType="int" resultType="free">
		select * from
		freeboard where free_no = #{free_no}
	</select>

	<!-- 조회수 -->
	<update id="updateRe" parameterType="int">
		update freeboard set
		free_readcount = free_readcount+1 where free_no = #{free_no}
	</update>

	<!-- 수정 -->
	<update id="update" parameterType="free">
		update freeboard set
		free_subject = #{free_subject}, free_content = #{free_content} where
		free_no = #{free_no}
	</update>

	<!-- 삭제 -->
	<update id="delete" parameterType="int">
		update freeboard set free_del
		= 1 where free_no = #{free_no}
	</update>

	<!-- 댓글 목록 -->
	<!-- <select id="relist" parameterType="int" resultType="refree"> select 
		* from free_reply where free_no = #{free_no} order by free_rno </select> -->

<!-- 	<delete id="singoFreeDelete">
		delete from singo_board where category_no = #{param2} and singo_board_no = #{param1}
	</delete> -->

<delete id="singoFreeDelete">
		delete from singo_board where category_no = #{param2} and singo_board_no = #{param1}
</delete>


</mapper>